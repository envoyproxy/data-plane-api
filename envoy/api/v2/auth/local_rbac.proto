syntax = "proto3";

// [#proto-status: draft]

package envoy.api.v2.auth;

import "envoy/api/v2/auth/rbac.proto";

// LocalRBAC specifies Istio RBAC policies that apply to the local RBAC engine
// that typically runs on a proxy. There can be multiple services running behind
// a proxy.
//
// Here is an example of local RBAC policy, which contains policies for a single service.
// [
//   {
//     service: products.default.svc.cluster.local
//     policies:
//     - role: service-admin
//       spec:
//         rules:
//         - services: [“*”]
//           methods: [“*”]
//       bindings:
//       - subjects:
//         - user: “cluster.local/ns/default/sa/admin”
//         roleRef:
//           kind: ServiceRole
//           name: “service-admin”
//     - role: product-viewer
//       spec:
//         rules:
//         - services: [“products.default.svc.cluster.local”]
//           paths: [“/products/*”, “*/reviews”]
//           methods: [“GET”, “HEAD”]
//       bindings:
//       - subjects:
//         - user: “alice@yahoo.com”
//         roleRef:
//           kind: ServiceRole
//           name: “product-viewer”
//    },
//  ]
message LocalRBAC {
  // A list of ServicePolicy. One per service.
  repeated ServicePolicy service_policies = 1;
}

// ServicePolicy specifies a service and the Istio RBAC policies that apply to the service.
message ServicePolicy {
  // The fully qualified name of the service.
  string service = 1;

  // The Istio RBAC policies that apply to the service.
  repeated Policy policies = 2;
}

// Policy specifies a ServiceRole and the associated ServiceRoleBindings.
message Policy {
  // The name of the ServiceRole.
  string role = 1;

  // The ServiceRole specification.
  ServiceRole spec = 2;

  // The ServiceRoleBindings that are associated with the given ServiceRole.
  repeated ServiceRoleBinding bindings = 3;
}
