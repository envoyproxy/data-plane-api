syntax = "proto3";

// [#proto-status: draft]

package envoy.service.auth.v2;
option go_package = "v2";
option java_generic_services = true;

import "envoy/service/auth/v2/attribute_context.proto";

import "google/rpc/status.proto";

// A generic interface for performing authorization check on incoming
// requests to a networked service.
service Authorization {
  // Performs authorization check based on the attributes associated with the
  // incoming request, and returns status `OK` or not `OK`.
  rpc Check(CheckRequest) returns (CheckResponse);
}

message CheckRequest {
  // The request attributes.
  AttributeContext attributes = 1;
}

// Describes an HTTP/1.1 object.
message HttpMessage {
  // Http status code.
  int32 status = 1;

  // Http entity headers.
  map<string, string> headers = 2;

  // Http entity body.
  string body = 3;
}

message CheckResponse {
  // Status `OK` allows the request. Any other status indicates the request should be denied.
  google.rpc.Status status = 1;

  // Optional http message that may be used by the authorization service a) in the case of a not OK
  // status, to provide a more detailed http response to the downstream client. b) in the case of OK
  // status, to provide the http headers which should be modified in the request before dispatching
  // it to the upstream.
  HttpMessage http_message = 2;
}
