syntax = "proto3";

package envoy.api.v2.auth;

import "envoy/config/rbac/v2alpha/rbac.proto";

// LocalRBAC specifies RBAC policies that apply to the local RBAC engine
// that typically runs on a proxy. There can be multiple services running behind
// a proxy.
//
// Here is an example of local RBAC policy, which contains policies for a single service.
// {
//   "products.default.svc.cluster.local": {
//     policies: {
//       "service-admin": {
//         spec:
//           rules:
//           - services: [“*”]
//             methods: [“*”]
//          bindings: {
//            "bind-service-admin": {
//              subjects:
//              - user: “cluster.local/ns/default/sa/admin”
//            },
//          }
//        },
//        "product-viewer": {
//          spec:
//            rules:
//            - services: [“products.default.svc.cluster.local”]
//              paths: [“/products/*”, “*/reviews”]
//              methods: [“GET”, “HEAD”]
//          bindings: {
//            "bind-product-viewer": {
//               subjects:
//               - user: “alice@yahoo.com”
//             },
//           }
//         },
//       }
//     },
//  }
message LocalRBAC {
  // Maps from the fully qualified service name to ServicePolicy.
  map<string, ServicePolicy> service_policies = 1;
}

// ServicePolicy specifies the RBAC policies that apply to a service.
message ServicePolicy {
  // Maps from role name to RoleInfo
  map<string, RoleInfo> policies = 1;
}

// Policy specifies a ServiceRole and the associated ServiceRoleBindings.
message RoleInfo {
  // The ServiceRole specification.
  ServiceRole spec = 2;

  // The ServiceRoleBindings that are associated with the given ServiceRole.
  // The key of the map is the name of the ServiceRoleBinding.
  // The value of the map is ServiceRoleBinding spec.
  map<string, ServiceRoleBinding> bindings = 3;
}
