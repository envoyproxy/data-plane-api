syntax = "proto3";

package envoy.api.v2.filter.network;

import "api/address.proto";
import "google/protobuf/duration.proto";

// Envoy provides a network filter that performs TLS client authentication
// via principals fetched from a REST VPN service. This filter matches the
// presented client certificate hash against the principal list to
// determine whether the connection should be allowed or not. Optional IP
// white listing can also be configured. This functionality can be used to
// build edge proxy VPN support for web infrastructure.
message ClientSSLAuth {
  // The cluster manager cluster that runs the authentication service. The
  // filter will connect to the service every 60s to fetch the list of
  // principals. The service must support the expected REST API.
  string auth_api_cluster = 1;
  // The prefix to use when emitting statistics.
  string stat_prefix = 2;
  // Time in milliseconds between principal refreshes from the
  // authentication service. Default is 60000 (60s). The actual fetch time
  // will be this value plus a random jittered value between
  // 0-refresh_delay_ms milliseconds.
  google.protobuf.Duration refresh_delay = 3;
  // An optional list of IP address and subnet masks that should be white
  // listed for access by the filter. If no list is provided, there is no
  // IP white list.
  repeated CidrRange ip_white_list = 4;
}
