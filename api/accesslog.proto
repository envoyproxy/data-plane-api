syntax = "proto3";

package envoy.api.v2;

import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

message EnvoyAccessLog {
  // The request method, ie, "GET", "HEAD", "POST"
  string request_method = 1;

  // The time we started servicing this request
  google.protobuf.UInt64Value start_time = 2;

  // Incoming protocol variation spoken
  enum Protocol {
    PROTOCOL_UNSPECIFIED = 0;
    HTTP10 = 1;
    HTTP11 = 2;
    HTTP2 = 3;
  }
  Protocol protocol_variant = 3;

  // This enum defines the various things that may have occurred while
  // processing a request.
  enum ResponseFlag {
    // Local server healthcheck failed.
    failed_local_healthCheck = 0;
    // No healthy upstream.
    no_healthy_upstream = 1;
    // Request timeout on upstream.
    upstream_request_timeout = 2;
    // Local codec level reset was sent on the stream.
    local_reset = 3;
    // Remote codec level reset was received on the stream.
    upstream_remote_reset = 4;
    // Local reset by a connection pool due to an initial connection failure.
    upstream_connection_failure = 5;
    // If the stream was locally reset due to connection termination.
    upstream_connection_termination = 6;
    // The stream was reset because of a resource overflow.
    upstream_overflow = 7;
    // No route found for a given request.
    no_route_found = 8;
    // Request was delayed before proxying.
    delay_injected = 9;
    // Abort with error code was injected.
    fault_injected = 10;
    // Request was ratelimited locally by rate limit filter.
    rate_limited = 11;
  }
  // Status flags about the response.
  repeated ResponseFlag response_flags = 4;

  // The remote (upstream) host, as an IPv4 or IPv6 string.
  // IPv6 addresses should be stored in canonical (compressed) format.
  string upstream_host = 5;

  // The Upstream Cluster that the upstream host belongs to.
  string upstream_cluster = 6;

  // This field is the IP and port on which the request from the user was
  // received, stored in ipv4:port or [ipv6]:port format.
  string destination_host = 7;

  // Size of the HTTP request body in bytes
  google.protobuf.Int64Value request_body_size = 8;

  // Size of the HTTP response body in bytes
  google.protobuf.Int64Value response_body_size = 9;

  // Size of the HTTP request headers in bytes
  google.protobuf.Int64Value request_hdrs_size = 10;

  // Size of the HTTP response headers in bytes
  google.protobuf.Int64Value response_hdrs_size = 11;

  // Whether the request arrived via a secure (TLS) protocol
  google.protobuf.BoolValue secure = 12;

  // Whether the request is a HealthCheck request
  google.protobuf.BoolValue health_check = 13;

  // The HTTP response code
  google.protobuf.UInt32Value response_code = 14;

  // User agent as sent by client HTTP
  string user_agent = 15;

  // Host header as sent by client HTTP
  string host = 16;

  // Path
  string path = 17;

  // Referer field as sent by client HTTP
  // (Referer is spelled to match the HTTP spec, not English).
  string referer = 18;

  // X-Forwarded-For request header
  string forwarded_for = 19;

  // X-Request-Id request header
  string request_id = 20;

  // HTTP2 :authority header value
  string authority = 21;

  // Duration (milliseconds)
  //
  // The total duration it took to service this request from the StartTime until
  // the response was written to the user.
  google.protobuf.Duration duration = 22;

  // Upstream Service Time
  //
  // From the X-Envoy-Upstream-Service-Time response header, this is the amount it took
  // the upstream server to service the request.
  google.protobuf.UInt64Value upstream_service_time = 23;


  // Original Path (X-Envoy-Original-Path)
  string original_path = 24;

  // Opaque metadata associated with this access log entry.
  //
  // This can be used to associate IDs attached to the various configurations
  // used to process this request with the access log entry.  For example, a
  // route created from a higher level forwarding rule with some ID can place
  // that ID in this field and cross reference later.
  google.protobuf.Struct metadata = 25;

  // Headers requested for logging but not covered by the specific fields above.
  // TODO: The value should be repeated string, but it doesn't work.
  map<string, string> request_headers = 26;
  map<string, string> response_headers = 27;
}

